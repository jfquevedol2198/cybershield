import dayjs from "dayjs";
import PropTypes from "prop-types";

import Table from "../../../components/Table";
import Tag from "../../../components/Tag";
import { SortDataType } from "../../../utils";
import { RiskLevel, getRiskLevel } from "../../../utils/risk";

const columns = [
  {
    title: "CVE Name",
    dataIndex: "cveName",
    key: "cveName",
    sort: true,
    sortDataType: SortDataType.String,
    colSpan: 1,
    className: "",
    align: "left",
  },
  {
    title: "Vulnerability score",
    dataIndex: "cveScore",
    key: "cveScore",
    sort: true,
    sortDataType: SortDataType.Number,
    colSpan: 1,
    className: "",
    render: (value) => <Tag riskLevel={RiskLevel[getRiskLevel(value * 10)]} />,
    align: "left",
  },
  {
    title: "Affected assets",
    dataIndex: "affectedAssets",
    key: "affectedAssets",
    sort: true,
    sortDataType: SortDataType.Number,
    colSpan: 1,
    className: "",
    render: (value) => <span className="text-link">{value}</span>,
    align: "left",
  },
  {
    title: "Type",
    dataIndex: "type",
    key: "type",
    sort: true,
    sortDataType: SortDataType.String,
    colSpan: 1,
    className: "",
    align: "left",
  },
  {
    title: "Impact",
    dataIndex: "impact",
    key: "impact",
    sort: true,
    sortDataType: SortDataType.String,
    colSpan: 1,
    className: "",
    align: "left",
  },
  {
    title: "Vendor",
    dataIndex: "name",
    key: "name",
    sort: true,
    sortDataType: SortDataType.String,
    colSpan: 1,
    className: "",
    align: "left",
  },
  {
    title: "Released date",
    dataIndex: "releaseDate",
    key: "releaseDate",
    sort: true,
    sortDataType: SortDataType.Date,
    render: (value) => dayjs(value).format("DD MMM YYYY"),
    colSpan: 1,
    className: "",
    align: "left",
  },
  {
    title: "Last revised",
    dataIndex: "updatedAt",
    key: "updatedAt",
    sort: true,
    sortDataType: SortDataType.Date,
    colSpan: 1,
    render: (value) => dayjs(value).format("DD MMM YYYY | HH:mm:ss"),
    className: "",
    align: "left",
  },
];

const VulnerabilityTable = ({ data, loading }) => {
  return (
    <Table
      columns={columns}
      dataSource={data}
      rowsPerPage={10}
      loading={loading}
    />
  );
};

VulnerabilityTable.propTypes = {
  data: PropTypes.arrayOf(PropTypes.any),
  loading: PropTypes.bool,
};

export default VulnerabilityTable;
